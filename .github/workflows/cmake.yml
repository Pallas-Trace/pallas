name: CMake_tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDedInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: download-openmpi
        run: wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.5.tar.gz

    - name: extract-openmpi
        run: tar -xvf ./openmpi-4.1.5.tar.gz

    - name: configure-openmpi
        run: ./openmpi-4.1.5/configure --prefix="/home/${USER}/.openmpi"

    - name: install-openmpi
       run: |
        make -j
        sudo make install

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build the program 
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      run: ctest -C ${{env.BUILD_TYPE}}

